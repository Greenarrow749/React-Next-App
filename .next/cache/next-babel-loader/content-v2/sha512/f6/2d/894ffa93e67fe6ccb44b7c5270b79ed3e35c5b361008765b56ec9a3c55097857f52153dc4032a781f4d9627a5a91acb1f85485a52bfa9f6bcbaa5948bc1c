{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ashish\\\\react-udemy-23-nextjs-main_proj\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React, { Fragment } from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(_ref) {\n  var meetupData = _ref.meetupData;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      title: meetupData.title,\n      image: meetupData.image,\n      description: meetupData.description,\n      address: meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n}; // This fxn is always needed for 'pages' which need to pre-render dynamic data by using 'getStaticProps' fxn.\n// We need this fxn because by using getStaticProps we are pre-rendering data during build time,\n// but we need to keep in mind that this is gonna be a dynamic page, since for different meetup IDs different\n// data needs to be loaded i.e. Next.js needs to pre-generate data for all possible IDs. But how will Next.js\n// know what all data to pre-generate? Thats why we need to use getStaticPaths fxn\n// which will return all the possible dynamic segment values\n\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/ashish/react-udemy-23-nextjs-main_proj/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetails","MeetupDetailsPage","meetupData","title","description","image","address"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5C,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,UAAU,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,UAAU,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEF,UAAU,CAACC,KADpB;AAEE,MAAA,KAAK,EAAED,UAAU,CAACG,KAFpB;AAGE,MAAA,WAAW,EAAEH,UAAU,CAACE,WAH1B;AAIE,MAAA,OAAO,EAAEF,UAAU,CAACI;AAJtB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;;;KAtBML,iB;;AAmEN,eAAeA,iBAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetailsPage = ({ meetupData }) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{meetupData.title}</title>\r\n        <meta name=\"description\" content={meetupData.description} />\r\n      </Head>\r\n      <MeetupDetails\r\n        title={meetupData.title}\r\n        image={meetupData.image}\r\n        description={meetupData.description}\r\n        address={meetupData.address}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// This fxn is always needed for 'pages' which need to pre-render dynamic data by using 'getStaticProps' fxn.\r\n// We need this fxn because by using getStaticProps we are pre-rendering data during build time,\r\n// but we need to keep in mind that this is gonna be a dynamic page, since for different meetup IDs different\r\n// data needs to be loaded i.e. Next.js needs to pre-generate data for all possible IDs. But how will Next.js\r\n// know what all data to pre-generate? Thats why we need to use getStaticPaths fxn\r\n// which will return all the possible dynamic segment values\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ashish749:Greenarrow123@node-dev.w7b9d75.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"Meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    // false-when u know u have included all IDs(when an unmentioned ID is entered, 404 will be given)\r\n    // true- when you have just entered frequently used IDs(when an unmentioned ID is entered, Next.js will dynamically generate data)\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n  // Fetch data from API for a single meetup\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ashish749:Greenarrow123@node-dev.w7b9d75.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"Meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: new ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n        address: selectedMeetup.address,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}