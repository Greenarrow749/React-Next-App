{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashish\\\\react-udemy-23-nextjs-main_proj\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetailsPage = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      title: \"First meet up at Santorini\",\n      image: \"https://img.traveltriangle.com/blog/wp-content/uploads/2019/11/og-for-Places-to-visit-in-Santorini_28th-nov.jpg\",\n      description: \"First Meet up!\",\n      address: \"Santorini, Greece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; // This fxn is always needed for 'pages' which need to pre-render dynamic data by using 'getStaticProps' fxn.\n// We need this fxn because by using getStaticProps we are pre-rendering data during build time,\n// but we need to keep in mind that this is gonna be a dynamic page, since for different meetup IDs different\n// data needs to be loaded i.e. Next.js needs to pre-generate data for all possible IDs. But how will Next.js\n// know what all data to pre-generate? Thats why we need to use getStaticPaths fxn\n// which will return all the possible dynamic segment values\n\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Ashish749:Greenarrow123@node-dev.w7b9d75.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"Meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    // false-when u know u have included all IDs(when an unmentioned ID is entered, 404 will be given)\n    // true- when you have just entered frequently used IDs(when an unmentioned ID is entered, Next.js will dynamically generate data)\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: ObjectId(meetup._id.toString())\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // Fetch data from API for a single meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"First meet up at Santorini\",\n        image: \"https://img.traveltriangle.com/blog/wp-content/uploads/2019/11/og-for-Places-to-visit-in-Santorini_28th-nov.jpg\",\n        description: \"First Meet up!\",\n        address: \"Santorini, Greece\"\n      }\n    }\n  };\n};\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/Users/ashish/react-udemy-23-nextjs-main_proj/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetails","MongoClient","ObjectId","MeetupDetailsPage","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","id","title","image","description","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,iHAFR;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAE,KAHL;AAILC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEjB,QAAQ,CAACe,MAAM,CAACL,GAAP,CAAWQ,QAAX,EAAD;AAApB;AADsB,KAAb,CAAZ;AAJF,GAAP;AAQD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEN,QADM;AAEVO,QAAAA,KAAK,EAAE,4BAFG;AAGVC,QAAAA,KAAK,EACH,iHAJQ;AAKVC,QAAAA,WAAW,EAAE,gBALH;AAMVC,QAAAA,OAAO,EAAE;AANC;AADP;AADF,GAAP;AAYD,CAfM;AAiBP,eAAe1B,iBAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetailsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetails\r\n        title=\"First meet up at Santorini\"\r\n        image=\"https://img.traveltriangle.com/blog/wp-content/uploads/2019/11/og-for-Places-to-visit-in-Santorini_28th-nov.jpg\"\r\n        description=\"First Meet up!\"\r\n        address=\"Santorini, Greece\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// This fxn is always needed for 'pages' which need to pre-render dynamic data by using 'getStaticProps' fxn.\r\n// We need this fxn because by using getStaticProps we are pre-rendering data during build time,\r\n// but we need to keep in mind that this is gonna be a dynamic page, since for different meetup IDs different\r\n// data needs to be loaded i.e. Next.js needs to pre-generate data for all possible IDs. But how will Next.js\r\n// know what all data to pre-generate? Thats why we need to use getStaticPaths fxn\r\n// which will return all the possible dynamic segment values\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ashish749:Greenarrow123@node-dev.w7b9d75.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"Meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    // false-when u know u have included all IDs(when an unmentioned ID is entered, 404 will be given)\r\n    // true- when you have just entered frequently used IDs(when an unmentioned ID is entered, Next.js will dynamically generate data)\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: ObjectId(meetup._id.toString()) },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  // Fetch data from API for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        title: \"First meet up at Santorini\",\r\n        image:\r\n          \"https://img.traveltriangle.com/blog/wp-content/uploads/2019/11/og-for-Places-to-visit-in-Santorini_28th-nov.jpg\",\r\n        description: \"First Meet up!\",\r\n        address: \"Santorini, Greece\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}